{"ast":null,"code":"var _jsxFileName = \"G:\\\\Anish\\\\Projects\\\\BlockchainKickstarterApp\\\\pages\\\\campaigns\\\\new.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\"; //Link helps to render anchor tags into React components and navigate around the application\n//Router allows to programmatically redirect people from one page to another page within our app\n\nclass CampaignNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      minimumContribution: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault(); //prevents browser from attempting to submit the form to the server\n\n      this.setState({\n        loading: true,\n        errorMessage: \"\"\n      }); //check for any invalid input from the user\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createCampaign(this.state.minimumContribution).send({\n          from: accounts[0] //When submitting through browser no need to explicitly mention gas required as metamask will automatically do it for us\n\n        });\n        Router.pushRoute(\"/\"); //creates a new history in the browser data\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Create a Campaign\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, __jsx(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Minimum Contribution\"), __jsx(Input, {\n      label: \"wei\",\n      labelPosition: \"right\",\n      placeholder: \"Enter a value\",\n      value: this.state.minimumContribution,\n      onChange: event => {\n        this.setState({\n          minimumContribution: event.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), __jsx(Message, {\n      error: true,\n      header: \"Opps! Something went wrong.\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \"Create\")));\n  }\n\n}\n\nexport default CampaignNew;","map":{"version":3,"sources":["G:/Anish/Projects/BlockchainKickstarterApp/pages/campaigns/new.js"],"names":["React","Component","Button","Form","Input","Message","Layout","factory","web3","Router","CampaignNew","minimumContribution","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","methods","createCampaign","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CACA;AACA;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNU,MAAAA,mBAAmB,EAAE,EADf;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD0B;;AAAA,sCAQvB,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CACA;;AAExB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd,EAHwB,CAKxB;;AACA,UAAI;AACF,cAAMK,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMZ,OAAO,CAACa,OAAR,CACHC,cADG,CACY,KAAKC,KAAL,CAAWX,mBADvB,EAEHY,IAFG,CAEE;AACJC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD,CADV,CAEJ;;AAFI,SAFF,CAAN;AAOAR,QAAAA,MAAM,CAACgB,SAAP,CAAiB,GAAjB,EATE,CASqB;AACxB,OAVD,CAUE,OAAOC,GAAP,EAAY;AACZ,aAAKV,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEc,GAAG,CAACC;AAApB,SAAd;AACD;;AAED,WAAKX,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KA7BiC;AAAA;;AA+BlCe,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWV,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWX,mBAJpB;AAKE,MAAA,QAAQ,EAAEG,KAAK,IAAI;AACjB,aAAKE,QAAL,CAAc;AAAEL,UAAAA,mBAAmB,EAAEG,KAAK,CAACgB,MAAN,CAAaC;AAApC,SAAd;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAcE,MAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,6BAFT;AAGE,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWV,YAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAmBE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,OAA5B;AAAqC,MAAA,OAAO,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CAFF,CADF;AA4BD;;AA5DiC;;AA+DpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport { Router } from \"../../routes\";\r\n//Link helps to render anchor tags into React components and navigate around the application\r\n//Router allows to programmatically redirect people from one page to another page within our app\r\n\r\nclass CampaignNew extends Component {\r\n  state = {\r\n    minimumContribution: \"\",\r\n    errorMessage: \"\",\r\n    loading: false\r\n  };\r\n\r\n  //event handler function to handle events once form is submited\r\n  onSubmit = async event => {\r\n    event.preventDefault(); //prevents browser from attempting to submit the form to the server\r\n\r\n    this.setState({ loading: true, errorMessage: \"\" });\r\n\r\n    //check for any invalid input from the user\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await factory.methods\r\n        .createCampaign(this.state.minimumContribution)\r\n        .send({\r\n          from: accounts[0]\r\n          //When submitting through browser no need to explicitly mention gas required as metamask will automatically do it for us\r\n        });\r\n\r\n      Router.pushRoute(\"/\"); //creates a new history in the browser data\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err.message });\r\n    }\r\n\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h3>Create a Campaign</h3>\r\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n          {/*!! converts string to equivalent boolean value*/}\r\n          <Form.Field>\r\n            <label>Minimum Contribution</label>\r\n            <Input\r\n              label=\"wei\"\r\n              labelPosition=\"right\"\r\n              placeholder=\"Enter a value\"\r\n              value={this.state.minimumContribution}\r\n              onChange={event => {\r\n                this.setState({ minimumContribution: event.target.value });\r\n              }}\r\n            />\r\n          </Form.Field>\r\n          <Message\r\n            error\r\n            header=\"Opps! Something went wrong.\"\r\n            content={this.state.errorMessage}\r\n          />\r\n          <Button loading={this.state.loading} primary>\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CampaignNew;\r\n"]},"metadata":{},"sourceType":"module"}