{
  "_args": [
    [
      {
        "raw": "json-rpc-engine@^3.6.0",
        "scope": null,
        "escapedName": "json-rpc-engine",
        "name": "json-rpc-engine",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\ANISH\\BlockChainProjects\\kickstarter\\node_modules\\eth-block-tracker"
    ]
  ],
  "_from": "json-rpc-engine@^3.6.0",
  "_hasShrinkwrap": false,
  "_id": "json-rpc-engine@3.8.0",
  "_location": "/json-rpc-engine",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/json-rpc-engine_3.8.0_1538634668327_0.7000887711180923"
  },
  "_npmUser": {
    "name": "kumavis",
    "email": "aaron@kumavis.me"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-rpc-engine@^3.6.0",
    "scope": null,
    "escapedName": "json-rpc-engine",
    "name": "json-rpc-engine",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eth-block-tracker",
    "/eth-json-rpc-infura",
    "/eth-json-rpc-middleware",
    "/eth-tx-summary/eth-block-tracker"
  ],
  "_resolved": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-3.8.0.tgz",
  "_shasum": "9d4ff447241792e1d0a232f6ef927302bb0c62a9",
  "_shrinkwrap": null,
  "_spec": "json-rpc-engine@^3.6.0",
  "_where": "C:\\Users\\ANISH\\BlockChainProjects\\kickstarter\\node_modules\\eth-block-tracker",
  "author": {
    "name": "kumavis"
  },
  "browserify": {
    "transform": [
      [
        "babelify",
        {
          "presets": [
            "env"
          ]
        }
      ]
    ]
  },
  "bugs": {
    "url": "https://github.com/kumavis/json-rpc-engine/issues"
  },
  "contributors": [
    {
      "name": "kumavis",
      "email": "aaron@kumavis.me"
    }
  ],
  "dependencies": {
    "async": "^2.0.1",
    "babel-preset-env": "^1.7.0",
    "babelify": "^7.3.0",
    "json-rpc-error": "^2.0.0",
    "promise-to-callback": "^1.0.0",
    "safe-event-emitter": "^1.0.1"
  },
  "description": "a tool for processing JSON RPC",
  "devDependencies": {
    "aegir": "^12.0.8",
    "browserify": "^14.1.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-6QNcvm2gFuuK4TKU1uwfH0Qd/cOSb9c1lls0gbnIhciktIUQJwz6NQNAW4B1KiGPenv7IKu97V222Yo1bNhGuA==",
    "shasum": "9d4ff447241792e1d0a232f6ef927302bb0c62a9",
    "tarball": "https://registry.npmjs.org/json-rpc-engine/-/json-rpc-engine-3.8.0.tgz",
    "fileCount": 15,
    "unpackedSize": 27942,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtbOtCRA9TVsSAnZWagAA70gP+wXywsHbTSug1s6i7qnd\ns8P8JVfl2G+vCghosRwJnck9U/U0WyuD/Gbg0wn6XPdtI0LB5fdGDbfPOMkz\nAn/YBw1JGDoL2Cimq4vbrZz4YSLJBnpLpIx0tj3IVOQFFachAFmxoyVl9mQd\n6YbZj253bASiAGVCooh0SLCnS4bMZUvbAMUk+qCoZPtCI8Yrw9EE2rikxI4P\n8Lz2Jj9nU/INjw7sbJTopAkTygNL+zg55kv/e/GcqMRc+16UsqyZEb8BW5f/\nyHTD4xpvkB+QAtRu5sKtT6kAJXwzXzdvlpUfp+gEwccJHOZIw14d2gVU3250\nPxRLOHjbPQiwB83viTO03m8dR97qH7R9gmCZBUW72NQpiZTi79D7UqlwnkMk\nP/1dm14KcO6c9t9fB4c5VEpyHPBbwhkGjeFdZdgkSFejXLdIlSMImR/4NPVT\nc5lFrHRYZtOK4me2W8BouoI6OnQ2veP+bn6iJODlO4nnvhz9bN+VQXQHNOOb\nxGWK9mJTNSgZNFFfQ7hF64gymvGRd1Q2wekjKxWZ3Ipclwwz01/mXJlEgTal\nj62PlTe4r3hy2RTZXrsTqOXTqs4tDhyzv9pBsFFRuyuXuDULnSDi47sm+RAm\ncbzLclN8C+bReRDZRDSZY6h1lPkYpZKexzc6XzMlNnc0lAej3Bs2/2NALefP\n38Dg\r\n=P/WI\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "fb193863c79cf33552c3268648bf00ba8b725078",
  "homepage": "https://github.com/kumavis/json-rpc-engine#readme",
  "license": "ISC",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "danfinlay",
      "email": "dan@danfinlay.com"
    },
    {
      "name": "kumavis",
      "email": "aaron@kumavis.me"
    }
  ],
  "name": "json-rpc-engine",
  "optionalDependencies": {},
  "readme": "# RpcEngine\n\na tool for processing JSON RPC\n\n### usage\n\n```js\nconst RpcEngine = require('json-rpc-engine')\n\nlet engine = new RpcEngine()\n```\n\nBuild a stack of json rpc processors by pushing in RpcEngine middleware.\n\n```js\nengine.push(function(req, res, next, end){\n  res.result = 42\n  end()\n})\n```\n\nJSON RPC are handled asynchronously, stepping down the stack until complete.\n\n```js\nlet request = { id: 1, jsonrpc: '2.0', method: 'hello' }\n\nengine.handle(request, function(err, res){\n  // do something with res.result\n})\n```\n\nRpcEngine middleware has direct access to the request and response objects.\nIt can let processing continue down the stack with `next()` or complete the request with `end()`.\n\n```js\nengine.push(function(req, res, next, end){\n  if (req.skipCache) return next()\n  res.result = getResultFromCache(req)\n  end()\n})\n```\n\nBy passing a 'return handler' to the `next` function, you can get a peek at the result before it returns.\n\n```js\nengine.push(function(req, res, next, end){\n  next(function(cb){\n    insertIntoCache(res, cb)\n  })\n})\n```\n\nRpcEngines can be nested by converting them to middleware `asMiddleware(engine)`\n\n```js\nconst asMiddleware = require('json-rpc-engine/lib/asMiddleware')\n\nlet engine = new RpcEngine()\nlet subengine = new RpcEngine()\nengine.push(asMiddleware(subengine))\n```\n\n### gotchas\n\nHandle errors via `end(err)`, *NOT* `next(err)`.\n\n```js\n/* INCORRECT */\nengine.push(function(req, res, next, end){\n  next(new Error())\n})\n\n/* CORRECT */\nengine.push(function(req, res, next, end){\n  end(new Error())\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kumavis/json-rpc-engine.git"
  },
  "scripts": {
    "build": "aegir build",
    "coverage": "aegir coverage",
    "coverage-publish": "aegir coverage --provider coveralls",
    "lint": "aegir lint",
    "release": "aegir release",
    "release-major": "aegir release --type major",
    "release-minor": "aegir release --type minor",
    "test": "npm run test:node",
    "test:browser": "aegir test --target browser",
    "test:node": "aegir test --target node"
  },
  "version": "3.8.0"
}
