{
  "_args": [
    [
      {
        "raw": "json-rpc-error@^2.0.0",
        "scope": null,
        "escapedName": "json-rpc-error",
        "name": "json-rpc-error",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\ANISH\\BlockChainProjects\\kickstarter\\node_modules\\web3-provider-engine"
    ]
  ],
  "_from": "json-rpc-error@>=2.0.0 <3.0.0",
  "_id": "json-rpc-error@2.0.0",
  "_inCache": true,
  "_location": "/json-rpc-error",
  "_nodeVersion": "0.10.36",
  "_npmUser": {
    "name": "claudijo",
    "email": "claudijo.borovic@gmail.com"
  },
  "_npmVersion": "2.11.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-rpc-error@^2.0.0",
    "scope": null,
    "escapedName": "json-rpc-error",
    "name": "json-rpc-error",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eth-json-rpc-infura",
    "/eth-json-rpc-middleware",
    "/eth-tx-summary/web3-provider-engine",
    "/json-rpc-engine",
    "/web3-provider-engine"
  ],
  "_resolved": "https://registry.npmjs.org/json-rpc-error/-/json-rpc-error-2.0.0.tgz",
  "_shasum": "a7af9c202838b5e905c7250e547f1aff77258a02",
  "_shrinkwrap": null,
  "_spec": "json-rpc-error@^2.0.0",
  "_where": "C:\\Users\\ANISH\\BlockChainProjects\\kickstarter\\node_modules\\web3-provider-engine",
  "author": {
    "name": "Claudijo Borovic",
    "email": "hello@claudijo.com"
  },
  "bugs": {
    "url": "https://github.com/claudijo/json-rpc-error/issues"
  },
  "dependencies": {
    "inherits": "^2.0.1"
  },
  "description": "JSON RPC 2.0 Errors.",
  "devDependencies": {
    "istanbul": "^0.3.17",
    "mocha": "^2.2.5"
  },
  "directories": {},
  "dist": {
    "shasum": "a7af9c202838b5e905c7250e547f1aff77258a02",
    "tarball": "https://registry.npmjs.org/json-rpc-error/-/json-rpc-error-2.0.0.tgz"
  },
  "files": [
    "LICENSE",
    "index.js",
    "lib"
  ],
  "gitHead": "7112cf003974b0dc505e2d4314a041369e91b5f3",
  "homepage": "https://github.com/claudijo/json-rpc-error",
  "keywords": [
    "json",
    "rpc",
    "error"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "claudijo",
      "email": "claudijo.borovic@gmail.com"
    }
  ],
  "name": "json-rpc-error",
  "optionalDependencies": {},
  "readme": "# JSON RPC 2.0 Error\n\nError constructors for JSON RPC 2.0 errors as described in the\n[JSON-RPC 2.0 Error Specification]\n(http://www.jsonrpc.org/specification#error_object)\n\n| code             | message          | meaning                                                                                               |\n|------------------|------------------|-------------------------------------------------------------------------------------------------------|\n| -32700           | Parse error      | Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text. |\n| -32600           | Invalid Request  | The JSON sent is not a valid Request object.                                                          |\n| -32601           | Method not found | The method does not exist / is not available.                                                         |\n| -32602           | Invalid params   | Invalid method parameter(s).                                                                          |\n| -32603           | Internal error   | Internal JSON-RPC error.                                                                              |\n| -32000 to -32099 | Server error     | Reserved for implementation-defined server-errors.                                                    |\n\nSpecific errors are instances of the base constructor `JsonRpcError`, which in\nturn is an instance of the native JavaScript Error object.\n\nEach error can be constructed with or without the `new` keyword, for example\n\n`var err = new JsonRpcError.ParseError();`\n\nis the same as\n\n`var err = JsonRpcError.ParseError();`\n\nAlso see related packages [json-rpc-response](https://github.com/claudijo/json-rpc-response),\n[json-rpc-request](https://github.com/claudijo/json-rpc-request), and\n[json-rpc-notification](https://github.com/claudijo/json-rpc-notification)\n\n## Usage\n\nImport the JSON RPC 2.0 error module:\n\n```js\nvar JsonRpcError = require('json-rpc-error');\n```\n\n### JsonRpcError\nGeneral base constructor for JSON RPC 2 errors:\n\n```js\nnew JsonRpcError(message, code[, data]);\n```\n\n### Parse error\nInvalid JSON was received by the server.\n\n```js\nnew JsonRpcError.ParseError();\n```\n\n### Invalid Request\nThe JSON sent is not a valid Request object.\n\n```js\nnew JsonRpcError.InvalidRequest();\n```\n\n### Method not found\nThe method does not exist / is not available.\n\n```js\nnew JsonRpcError.MethodNotFound();\n```\n\n### Invalid params\nInvalid method parameter(s).\n\n```js\nnew JsonRpcError.InvalidParams();\n```\n\n### Internal error\nInternal JSON-RPC error. The constructor can take an optional error object, in\nwhich case the error's `message` property will be passed on.\n\n```js\nnew JsonRpcError.InternalError([error]);\n```\n\n### Server Error\nReserved for implementation-defined server-errors. Provided error code must be\nin the range -32000 to -32099.\n\n```js\nnew JsonRpcError.ServerError(code);\n```\n\n## Test\n\nRun unit tests:\n\n`$ npm test`\n\nCreate test coverage report:\n\n`$ npm run-script test-cov`\n\n# License\n\n[MIT](LICENSE)\n\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/claudijo/json-rpc-error.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --check-leaks --reporter spec --bail ./test --recursive --watch",
    "test-cov": "./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks ./test --recursive"
  },
  "version": "2.0.0"
}
